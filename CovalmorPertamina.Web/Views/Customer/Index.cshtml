
@{
    ViewBag.Title = "Kustomer";
}

<div class="row">
    <div class="col-lg-12 col-xs-12">
        <div class="box box-danger">
            <div class="box-header with-border">
                <button class="btn btn-success" onclick="addCustomer()"><i class="fa fa-plus-circle"></i> Tambah Customer</button>
                <button class="btn btn-primary" onclick="uploadCustomer()"><i class="fa fa-upload"></i> Upload Customer</button>
            </div>
            <div class="box-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-striped" id="table-list-customer">
                        <thead>
                            <tr>
                                <th>SP</th>
                                <th>Nama</th>
                                <th>Alamat</th>
                                <th>Email</th>
                                <th>NPWP</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="modal-form" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <form class="form-horizontal" data-toggle="validator" method="post">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"> &times;</span>
                    </button>
                    <h3 class="modal-title"></h3>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="No" class="col-md-3 control-label">No Customer</label>
                        <div class="col-md-6">
                            <input id="CustomerNo" type="text" class="form-control" name="CustomerNo" required>
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Nama" class="col-md-3 control-label">Nama</label>
                        <div class="col-md-6">
                            <input id="Name" type="text" class="form-control" name="Name" required />
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Email" class="col-md-3 control-label">Email</label>
                        <div class="col-md-6">
                            <input id="Email" type="email" class="form-control" name="Email" />
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                    <div class="form-group" id="password-display">
                        <label for="Alamat" class="col-md-3 control-label">Alamat</label>
                        <div class="col-md-6">
                            <input id="Address" type="text" class="form-control" name="Address" />
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="NPWP" class="col-md-3 control-label">NPWP</label>
                        <div class="col-md-6">
                            <input id="NPWP" type="text" class="form-control" name="NPWP" required />
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary btn-save" id="btn-submit-form" value="Simpan">
                        <i class="fa fa-floppy-o"></i> Simpan
                    </button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal">
                        <i class="fa fa-arrow-circle-left"></i> Batal
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal" id="modal-form-upload" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <form class="form-horizontal" data-toggle="validator" method="post">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"> &times;</span>
                    </button>
                    <h3 class="modal-title"></h3>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <div class="col-md-6">
                            <input type="file" name="FileUpload" id="FileUpload" required>
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary btn-save" id="btn-submit-upload" value="Simpan">
                        <i class="fa fa-floppy-o"></i> Simpan
                    </button>
                    <a class="btn btn-warning" href="#" onclick='downloadFileTemplate("@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Customer", action = "DownloadTemplate" })", "customer_template")'><i class="fa fa-file-excel-o"></i> Download Template</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>

    /*
     * description : Declare Variable
     */
    var type, table, url;


    /*
     * description : Load Customer Data Table
     */
    $(function () {
        table = $("#table-list-customer").DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            ajax: {
                url: "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Customer", action = "datatable" })",
                dataType: "JSON",
                type: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization",`Bearer ${sessionStorage.getItem("authtoken")}`);
                }
            },
            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
            columns: [
                { data: "CustomerNo", sortable: false },
                { data: "Name", sortable: false },
                { data: "Address", sortable: false },
                { data: "Email", sortable: false },
                { data: "NPWP", sortable: false },
                {
                    data: "Id",
                    render: function (id) {
                        return "<a onclick='editCustomer(" + id + ")' class='btn btn-primary'><i class='fa fa-pencil'>" +
                            "</i> Edit</a> " +
                            "<a onclick='deleteCustomer(" + id + ")' class='btn btn-danger'><i class='fa fa-trash'></i> Hapus</a>";
                    },
                    searchable: false,
                    sortable: false
                }
            ],
            buttons: [
                {
                    extend: 'excel',
                    title: 'Customer Data',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Customer Data',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                }
            ],
            dom: "<'row'<'col-sm-8'l><'col-sm-3 text-right'f><'col-sm-1 text-right'B>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-5'i><'col-sm-7'p>>"
        });
    });


    /*
     * description : Method Add Customer
     */
    function addCustomer() {
        type = "POST";
        url = "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Customer", action = "Create" })";
        $('#modal-form').modal('show');
        $('#modal-form form')[0].reset();
        $('.modal-title').text('Tambah Customer');
    }

    /*
    * description : Method upload Customer
    */
    function uploadCustomer() {
        saveMethod = "add";
        $('#modal-form-upload').modal('show');
        $('#modal-form-upload form')[0].reset();
        $('.modal-title').text('Upload Customer');
        $("#btn-submit").prop('disabled', false);
    }

    /*
     * description : Method Edit Customer
     */
    function editCustomer(ids) {
        type = "PATCH";
        var urlGet = "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Customer", action = "Index", id = 0 })";
        urlGet = urlGet.replace("0", ids);
        url = "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Customer", action = "Update", id = 0 })";
        url = url.replace("0", ids);
        $.ajax({
            url: urlGet,
            type: "GET",
            dataType: "JSON",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("Authorization",`Bearer ${sessionStorage.getItem("authtoken")}`);
            },
            success: function (data) {
                $('#modal-form').modal('show');
                $('.modal-title').text('Edit Customer');
                $('#CustomerNo').val(data.Data.CustomerNo);
                $('#Name').val(data.Data.Name);
                $('#Email').val(data.Data.Email);
                $('#Address').val(data.Data.Address);
                $('#NPWP').val(data.Data.NPWP);
            },
            error: function () {
                alert("Tidak Dapat Menampilkan Data");
            }
        });
    }

    /*
     * description : Method Delete Data
     */
    function deleteCustomer(id) {
        if (confirm("Apakah yakin data akan dihapus?")) {
            url = "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Customer", action = "Delete", id = 0 })";
            url = url.replace("0", id);
            $.ajax({
                url: url,
                type: "DELETE",
                error: function () {
                    alert("tidak dapat hapus data!");
                },
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization",`Bearer ${sessionStorage.getItem("authtoken")}`);
                },
                success: function (data) {
                    if (data.HttpStatus == 200 || data.HttpStatus == 201)  {
                        table.ajax.reload();
                    }
                    else {
                        alert("tidak dapat hapus data!");
                    }
                }
            });
        }
    }

    /*
     * description : Method Submit Form
     */
    $(function () {
        $('#modal-form form').validator().on('submit', function (e) {
            if (!e.isDefaultPrevented()) {
                $("#btn-submit-form").prop('disabled', true);
                $.ajax({
                    url: url,
                    type: type,
                    data: $('#modal-form form').serializeToJSON(),
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("Authorization",`Bearer ${sessionStorage.getItem("authtoken")}`);
                    },
                    success: function (data) {
                        if (data.HttpStatus == 200 || data.HttpStatus == 201) {
                            $('#modal-form').modal('hide');
                            table.ajax.reload();
                        }
                        else {
                            alert("tidak dapat menyimpan data!");
                        }
                        $("#btn-submit-form").prop('disabled', false);
                    },
                    error: function () {
                        alert("tidak dapat menyimpan data!");
                        $("#btn-submit-form").prop('disabled', false);
                    }
                });

                return false;
            }
        });


        $('#modal-form-upload form').validator().on('submit', function (e) {
            $("#btn-submit-upload").prop('disabled', true);
            if (!e.isDefaultPrevented()) {
                var dataForm = new FormData();
                dataForm.append("FileUpload", $("#FileUpload").get(0).files[0]);
                $.ajax({
                    url: "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Customer", action = "Import" })",
                    type: "POST",
                    data: dataForm,
                    enctype: 'multipart/form-data',
                    processData: false,
                    contentType: false,
                    cache: false,
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("Authorization",`Bearer ${sessionStorage.getItem("authtoken")}`);
                    },
                    success: function (data) {
                        if (data.HttpStatus == 200) {
                            $('#modal-form-upload').modal('hide');
                            table.ajax.reload();
                        }
                        $("#btn-submit-upload").prop('disabled', false);
                    },
                    error: function () {
                        alert("tidak dapat menyimpan data!");
                        $('#modal-form-upload').modal('hide');
                        table.ajax.reload();
                        $("#btn-submit-upload").prop('disabled', false);
                    }
                });

                return false;
            }
        });
    });

    </script>
}
