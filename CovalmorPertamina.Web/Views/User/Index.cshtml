
@{
    ViewBag.Title = "User";
}

<div class="row">
    <div class="col-lg-12 col-xs-12">
        <div class="box box-danger">
            <div class="box-header with-border">
                <button class="btn btn-success" onclick="addUser()"><i class="fa fa-plus-circle"></i> Tambah User</button>
            </div>
            <div class="box-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-striped" id="table-list-user">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="modal-form" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <form class="form-horizontal" data-toggle="validator" method="post">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"> &times;</span>
                    </button>
                    <h3 class="modal-title"></h3>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="nama" class="col-md-3 control-label">Nama</label>
                        <div class="col-md-6">
                            <input id="Name" type="text" class="form-control" name="Name" required>
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="jabatan" class="col-md-3 control-label">Jabatan</label>
                        <div class="col-md-6">
                            <input id="Jabatan" type="text" class="form-control" name="Jabatan" />
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="jabatan" class="col-md-3 control-label">Email</label>
                        <div class="col-md-6">
                            <input id="Email" type="email" class="form-control" name="Email" required />
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                    <div class="form-group" id="password-display" hidden>
                        <label for="password" class="col-md-3 control-label">Password</label>
                        <div class="col-md-6">
                            <input id="Password" type="password" class="form-control" name="Password" required />
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="role" class="col-md-3 control-label">Role</label>
                        <div class="col-md-6">
                            <select id="Role" class="form-control" name="Role" required>
                                @foreach (var role in ViewBag.Roles)
                                {
                                    <option value="@role.GetType().GetProperty("Id").GetValue(role, null)">
                                        @role.GetType().GetProperty("Name").GetValue(role, null)
                                    </option>
                                }
                            </select>
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary btn-save" value="Simpan">
                        <i class="fa fa-floppy-o"></i> Simpan
                    </button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal">
                        <i class="fa fa-arrow-circle-left"></i> Batal
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        var type, table, url, id;

        /*
        * description : Load User Data Table
        */
        $(function () {
            table = $("#table-list-user").DataTable({
                processing: true,
                serverSide: true,
                paging: true,
                ajax: {
                    url: "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "User", action = "datatable" })",
                    dataType: "JSON",
                    type: "POST",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("Authorization",`Bearer ${sessionStorage.getItem("authtoken")}`);
                    }
                },
                columns: [
                    { data: "Name", sortable: false },
                    { data: "Email", sortable: false },
                    { data: "Role", sortable: false },
                    {
                        data: "Id",
                        render: function (id) {
                            return "<a onclick='editUser(" + id + ")' class='btn btn-primary'><i class='fa fa-pencil'>" +
                                "</i> Edit</a> " +
                                "<a onclick='deleteData(" + id + ")' class='btn btn-danger'><i class='fa fa-trash'></i> Hapus</a>";
                        },
                        searchable: false,
                        sortable: false
                    }
                ],
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                buttons: [
                    {
                        extend: 'excel',
                        title: 'User Data',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'User Data',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    }
                ],
                dom: "<'row'<'col-sm-8'l><'col-sm-3 text-right'f><'col-sm-1 text-right'B>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>"
            });
        });


        /*
        * description : Method Add User
        */
        function addUser() {
            url = "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "User", action = "Create" })";
            type = "POST";
            $('#modal-form').modal('show');
            $('#modal-form form')[0].reset();
            $('.modal-title').text('Tambah User');
            $('#Password').attr("type", "password");
            $('#password-display').removeAttr("hidden");
        }


        /*
        * description : Method Edit User
        */    
        function editUser(ids) {
            type = "PATCH";
            var urlGet = "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "User", action = "Index", id = 0 })";
            urlGet = urlGet.replace("0", ids);
            url = "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "User", action = "Update", id = 0 })";
            url = url.replace("0", ids);
            id = ids;
            $.ajax({
                url: urlGet ,
                type: "GET",
                dataType: "JSON",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization",`Bearer ${sessionStorage.getItem("authtoken")}`);
                },
                success: function (data) { 
                    $('#modal-form').modal('show');
                    $('.modal-title').text('Edit User');
                    $('#Name').val(data.Data.Name);
                    $('#Email').val(data.Data.Email);
                    $('#Jabatan').val(data.Data.Jabatan);
                    $('#Password').val("no password");
                    $('#Role').val(data.Data.Role);
                    $('#password-display').attr("hidden", "true");
                },
                error: function () {
                    alert("Tidak Dapat Menampilkan Data");
                }
            });
        }


        /*
        * description : Method Delete Data
        */
        function deleteData(id) {
            if (confirm("Apakah yakin data akan dihapus?")) {
                url = "@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "User", action = "Delete", id = 0 })";
                url = url.replace("0", id);
                $.ajax({
                    url: url,
                    type: "DELETE",
                    error: function () {
                        alert("tidak dapat hapus data!");
                    },
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("Authorization",`Bearer ${sessionStorage.getItem("authtoken")}`);
                    },
                    success: function (data) {
                        if (data.HttpStatus == 200) {
                            table.ajax.reload();
                        }
                        else {
                            alert("tidak dapat hapus data!");
                        }
                    }
                });
            }
        }


        $(function () {
            $('#modal-form form').validator().on('submit', function (e) {
                if (!e.isDefaultPrevented()) {
                    $.ajax({
                        url: url,
                        type: type,
                        data: $('#modal-form form').serializeToJSON(),
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("Authorization",`Bearer ${sessionStorage.getItem("authtoken")}`);
                        },
                        success: function (data) {
                            if (data.HttpStatus == 200 || data.HttpStatus == 201) {
                                $('#modal-form').modal('hide');
                                table.ajax.reload();
                            }
                            else {
                                alert("tidak dapat menyimpan data!");
                            } 
                        },
                        error: function () {
                            alert("tidak dapat menyimpan data!");
                        }
                    });
                    return false;
                }
            });
        });
    </script>
}